# Example pipeline to run the mimics tool in Azure pipleines

# NOTE: Change this to a different pool to run the scripts.
trigger:
- '*'

pr:
- '*'

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: InstallMimics
  displayName: 'Install mimics-binary'
  steps:
  - script: |
      wget https://artifacts.rapid7.com/cloudsec/mimics/latest/mimics_latest_linux_arm64 -O mimics
      chmod +x mimics
    displayName: 'Install mimics-binary'
    artifacts:
      paths:
      - mimics

- job: InstallTerraform
  displayName: 'Install and initialize Terraform'
  steps:
  - script: |
      if [ ! -f /usr/local/bin/terraform ]; then
          wget https://releases.hashicorp.com/terraform/0.14.11/terraform_0.14.11_linux_arm64.zip
          unzip terraform_0.14.11_linux_arm64.zip -d terraform_temp
          chmod +x terraform_temp/terraform
          mv terraform_temp/terraform /usr/local/bin/
      else
          mv /usr/local/bin/terraform /usr/local/bin/terraform.old
          wget https://releases.hashicorp.com/terraform/0.14.11/terraform_0.14.11_linux_arm64.zip
          unzip terraform_0.14.11_linux_arm64.zip -d terraform_temp
          chmod +x terraform_temp/terraform
          mv terraform_temp/terraform /usr/local/bin/
      fi
    displayName: 'Install and initialize Terraform'

- job: ScanWithMimics
  displayName: 'Scan IaC files with Mimics'
  dependsOn:
  - InstallMimics
  - InstallTerraform
  steps:
  - script: |
      ./mimics scan $(System.DefaultWorkingDirectory) --api-key $(API_KEY) --base-url $(BASE_URL) --no-verify --log-format json --report-formats all --report-name probe --save-report --no-fail --verbose
    displayName: 'Scan IaC files with Mimics'
    continueOnError: true # This prevents the job from failing even if the scan fails
  - task: PublishPipelineArtifact@1
    displayName: 'Publish Scan Artifacts'
    inputs:
      pathtoPublish: $(System.DefaultWorkingDirectory)/probe.*
      artifactName: 'probe-artifact'


